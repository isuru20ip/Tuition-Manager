/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package GUI.popup;

import GUI.panal.EnrollmentManagement;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import modal.DB;
import modal.RoundedPanel;
import java.awt.Color;
import modal.LogCenter;

/**
 *
 * @author dell
 */
public class EnrollmentCourseSelection extends javax.swing.JDialog {

    EnrollmentManagement em;

    /**
     * Creates new form EnrollmentCourseSelection
     */
    public EnrollmentCourseSelection(EnrollmentManagement parent, boolean modal) {
        em = (EnrollmentManagement) parent;
        initComponents();

        loadSubject();
        loadClasses("SELECT * FROM `course`"
                + "INNER JOIN `teacher` ON `teacher`.`nic` = `course`.`teacher_nic`"
                + "INNER JOIN `room_type` ON `room_type`.`id` = `course`.`room_type_id`"
                + "INNER JOIN `subject` ON `subject`.`id` = `course`.`subject_id`"
                + "INNER JOIN `grade` ON `grade`.`id` = `course`.`grade_id` ORDER BY `course`.`id` ASC");

        DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
        renderer.setHorizontalAlignment(SwingConstants.CENTER);
        enrollmentCourseTable.setDefaultRenderer(Object.class, renderer);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new RoundedPanel(20, new Color(250,249,246));
        jLabel2 = new javax.swing.JLabel();
        searchClassIdField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        searchSubjectCombobox = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        enrollmentCourseTable = new javaswingdev.swing.table.Table();
        jPanel11 = new RoundedPanel(20, new Color(234,238,244));
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);

        jPanel2.setBackground(new java.awt.Color(200, 200, 198));

        jPanel3.setBackground(new java.awt.Color(200, 200, 198));

        jLabel2.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Search By ID");

        searchClassIdField.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        searchClassIdField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        searchClassIdField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchClassIdFieldKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Search By Subject");

        searchSubjectCombobox.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        searchSubjectCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        searchSubjectCombobox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                searchSubjectComboboxItemStateChanged(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 51, 51));
        jButton1.setFont(new java.awt.Font("Poppins SemiBold", 1, 14)); // NOI18N
        jButton1.setText("Clear");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        enrollmentCourseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course ID", "Teacher Name", "Room Type", "Subject", "Grade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        enrollmentCourseTable.getTableHeader().setReorderingAllowed(false);
        enrollmentCourseTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                enrollmentCourseTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(enrollmentCourseTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchClassIdField, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchSubjectCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchClassIdField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchSubjectCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel11.setBackground(new java.awt.Color(200, 200, 198));

        jLabel14.setBackground(new java.awt.Color(250, 249, 246));
        jLabel14.setFont(new java.awt.Font("Poppins SemiBold", 1, 20)); // NOI18N
        jLabel14.setText("Select Course");
        jLabel14.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void searchClassIdFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchClassIdFieldKeyReleased
        search();
    }//GEN-LAST:event_searchClassIdFieldKeyReleased

    private void searchSubjectComboboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_searchSubjectComboboxItemStateChanged
        search1();
    }//GEN-LAST:event_searchSubjectComboboxItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        searchClassIdField.setText("");
        searchSubjectCombobox.setSelectedIndex(0);
        loadClasses("SELECT * FROM `course`"
                + "INNER JOIN `teacher` ON `teacher`.`nic` = `course`.`teacher_nic`"
                + "INNER JOIN `room_type` ON `room_type`.`id` = `course`.`room_type_id`"
                + "INNER JOIN `subject` ON `subject`.`id` = `course`.`subject_id`"
                + "INNER JOIN `grade` ON `grade`.`id` = `course`.`grade_id` ORDER BY `course`.`id` ASC");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void enrollmentCourseTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enrollmentCourseTableMouseClicked
        try {
            int selectedRow = enrollmentCourseTable.getSelectedRow();

            // Check if the row is selected and if it's a double-click event
            if (selectedRow != -1 && evt.getClickCount() == 2) {
                if (enrollmentCourseSelection != null) {
                    //             Set the selected student ID to the text field
                    em.getjTextField6().setText(String.valueOf(enrollmentCourseTable.getValueAt(selectedRow, 0)));
                    em.getjTextField7().setText(String.valueOf(enrollmentCourseTable.getValueAt(selectedRow, 1)));
                    em.getjTextField8().setText(String.valueOf(enrollmentCourseTable.getValueAt(selectedRow, 2)));
                    em.getjTextField9().setText(String.valueOf(enrollmentCourseTable.getValueAt(selectedRow, 3)));
                    em.getjTextField10().setText(String.valueOf(enrollmentCourseTable.getValueAt(selectedRow, 4)));
                }
                this.dispose();
            }
        } catch (Exception e) {
            // Log the exception for debugging (avoid leaving it empty)
            LogCenter.logger.log(java.util.logging.Level.WARNING, "enrollmentCourseTableMouseClicked", e);

        }
    }//GEN-LAST:event_enrollmentCourseTableMouseClicked

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javaswingdev.swing.table.Table enrollmentCourseTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField searchClassIdField;
    private javax.swing.JComboBox<String> searchSubjectCombobox;
    // End of variables declaration//GEN-END:variables

    private EnrollmentCourseSelection enrollmentCourseSelection;

    public void setEnrollment(EnrollmentCourseSelection enrollmentCourseSelection) {
        this.enrollmentCourseSelection = enrollmentCourseSelection;
    }

    private void loadSubject() {
        try {

            ResultSet resultSet = DB.search("SELECT `name` FROM `subject`");

            Vector vector = new Vector();

            vector.add("Select");

            while (resultSet.next()) {
                vector.add(resultSet.getString("name"));
            }

            DefaultComboBoxModel ComboBoxModel = new DefaultComboBoxModel(vector);
            searchSubjectCombobox.setModel(ComboBoxModel);

        } catch (Exception e) {
            LogCenter.logger.log(java.util.logging.Level.WARNING, "loadSubject", e);
        }
    }

    private void loadClasses(String query) {

        try {

            ResultSet resultSet = DB.search(query);

            DefaultTableModel tableModel = (DefaultTableModel) enrollmentCourseTable.getModel();
            tableModel.setRowCount(0);

            while (resultSet.next()) {
                Vector vector = new Vector();
                vector.add(resultSet.getString("id"));
                vector.add(resultSet.getString("teacher.fname") + " " + resultSet.getString("teacher.lname"));
                vector.add(resultSet.getString("room_type.type"));
                vector.add(resultSet.getString("subject.name"));
                vector.add(resultSet.getString("grade.name"));

                tableModel.addRow(vector);
            }

        } catch (Exception e) {
            LogCenter.logger.log(java.util.logging.Level.WARNING, "loadClasses", e);
        }

    }

    private void search() {
        String id = searchClassIdField.getText();
        loadClasses("SELECT * FROM `course`"
                + "INNER JOIN `teacher` ON `teacher`.`nic` = `course`.`teacher_nic`"
                + "INNER JOIN `room_type` ON `room_type`.`id` = `course`.`room_type_id`"
                + "INNER JOIN `subject` ON `subject`.`id` = `course`.`subject_id`"
                + "INNER JOIN `grade` ON `grade`.`id` = `course`.`grade_id` WHERE `class`.`id` LIKE '%" + id + "%' ORDER BY `class`.`id` ASC");
    }

    private void search1() {

        String subject = String.valueOf(searchSubjectCombobox.getSelectedItem());
        loadClasses("SELECT * FROM `course`"
                + "INNER JOIN `teacher` ON `teacher`.`nic` = `course`.`teacher_nic`"
                + "INNER JOIN `room_type` ON `room_type`.`id` = `course`.`room_type_id`"
                + "INNER JOIN `subject` ON `subject`.`id` = `course`.`subject_id`"
                + "INNER JOIN `grade` ON `grade`.`id` = `course`.`grade_id` WHERE `subject`.`name` LIKE '%" + subject + "%' ORDER BY `class`.`id` ASC");
    }

}
